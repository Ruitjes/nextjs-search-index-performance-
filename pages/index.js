import {useState, useEffect, Fragment} from 'react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Result from '../comp/Result'
import moviesJSON from '../public/movies28000.json'
import si from 'search-index';
import levelup from 'levelup';
import memdown from 'memdown';


export default function Home() {
  const [documents, setDocuments] = useState([]);
  const [firstSearch, setFirstSearch] = useState(false);
  const [initTime, setInitTime] = useState(0)
  const [searchTime, setSearchTime] = useState(0);
  const [searchIndex, setSearchIndex] = useState(0);
  const [movies, setMovies] = useState(JSON.parse(JSON.stringify(moviesJSON)));


  async function initSearchIndex() {
    // initialize an index
    const searchIndex = await si({db: levelup(memdown())});
    console.log(searchIndex)

    const t0 = window.performance.now();
    // add documents to the index
    await searchIndex.PUT(movies)
    const t1 = window.performance.now();
    console.log('Indexing took', t1 - t0, 'msec and');
    setInitTime(t1 - t0)

    // Calculate number of bytes on disk
    const numBytes = new Blob([movies]).size;
    console.log(numBytes, 'bytes (on disk)');
  
    return searchIndex;
  }

  const [query, setQuery] = useState({
    search: "",
    sort: "DESCENDING",
    sliderGTE: 1900,
    sliderLTE: 2018
  })

  async function handleChange(event) {
    // Set states
    const value = event.target.value;
    setQuery({
      ...query,
      [event.target.name]: value
    });
  }

  useEffect(async () => {
    const si = await initSearchIndex();
    setSearchIndex(si);
  },[])

  useEffect(() => {
    if (!searchIndex) {
      return;
    }

    async function search(){
      const t2 = window.performance.now();

      const q = {
        SEARCH: [query.search, { 
          FIELD: ['year'], 
          VALUE: {
            GTE: query.sliderGTE.toString(),
        },
        }],
      }

      const results = await searchIndex.QUERY(q, {
        DOCUMENTS: true,
        SORT: {
          TYPE: 'NUMERIC',              // can be 'NUMERIC' or 'ALPHABETIC'
          DIRECTION: query.sort,        // can be 'ASCENDING' or 'DESCENDING'
          FIELD: '_match.year'          // field to sort on
        },
        PAGE: {
          NUMBER: 0,
          SIZE: 25
        }
      })

      const t3 = window.performance.now();
      console.log('Searching took', t3 - t2, 'msec');
      setSearchTime(t3 - t2)
      
      console.log('searchIndex',searchIndex)
      setDocuments(results)
      setFirstSearch(true)
    }

    search();

  }, [searchIndex, query.search, query.sort, query.sliderGTE, query.sliderLTE])

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1 className={styles.title}>
          Welcome to the <a href="https://nextjs.org">Seach Index</a> POC <br />
          Indexingtime: {initTime}msec <br />
          Searchtime: {searchTime}msec <br />
        </h1>
        <div className={styles.blockTop}>

        </div>

        <div className={styles.blockLeft}>
            <div>
              <label htmlFor="search">Search </label> 
              <input type="search" name="search" value={query.search} onChange={handleChange} />
            </div><br />
            <div>
            <label htmlFor="sort">Sort by </label> 
              <select name="sort" value={query.sort} onChange={handleChange}>
                <option value="ASCENDING">Id ASC</option>
                <option value="DESCENDING">Id DESC</option>
              </select>
            </div><br />
              <div>
              <label htmlFor="sliderGTE">Since {query.sliderGTE}</label> 
              <input type="range" min="1900" max="2018" name="sliderGTE" className="sliderGTE" id="sliderGTE" value={query.sliderGTE}  onChange={handleChange} /> <br />
              {/* Less then year: {query.sliderLTE} <input type="range" min="1900" max="2018" name="sliderLTE" className="sliderLTE" id="sliderLTE" value={query.sliderLTE}  onChange={handleChange} /> */}
            </div><br />
        </div>

        <div className={styles.blockRight}>
            <Result firstSearch={firstSearch} documents={documents} />
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}